<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.7.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:generic_mule_esb.xml"/>
    </spring:beans>
    <munit:test name="MainRoutingFlowTest_Unit_Test-1" description="Test">
        <munit:set payload="#['']" doc:name="Set Message">
            <munit:inbound-properties>
                <munit:inbound-property key="http.query.params" value="#[['url_key':'payload_1']]"/>
            </munit:inbound-properties>
        </munit:set>
        <flow-ref name="MainRoutingFlow" doc:name="Flow-ref to MainRoutingFlow"/>
        <munit:assert-payload-equals message="oops, wrong payload!" expectedValue="#['response_payload_1']" doc:name="Assert Payload"/>
    </munit:test>
    <munit:test name="MainRoutingFlowTest_Unit_Test-2" description="Test">
        <munit:set payload="#['']" doc:name="Set Message">
            <munit:inbound-properties>
                <munit:inbound-property key="http.query.params" value="#[['url_key':'payload_2']]"/>
            </munit:inbound-properties>
        </munit:set>
        <flow-ref name="MainRoutingFlow" doc:name="Flow-ref to MainRoutingFlow"/>
        <munit:assert-payload-equals message="oops, wrong payload!" expectedValue="#['response_payload_2']" doc:name="Assert Payload"/>
    </munit:test>
    <munit:test name="MainRoutingFlowTest_Funtional_Test-1" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Set Original Payload']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['SubFlow']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <flow-ref name="MainRoutingFlow" doc:name="Flow-ref to MainRoutingFlow"/>
        <munit:assert-payload-equals message="oops wrong payload!" expectedValue="#['response_payload_2']" doc:name="Assert Payload"/>
    </munit:test>
    <munit:test name="MainRoutingFlowTest_Functional_Test-2" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Set Original Payload']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['SubFlow']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <flow-ref name="MainRoutingFlow" doc:name="Flow-ref to MainRoutingFlow"/>
        <munit:assert-payload-equals message="oops wrong payload" expectedValue="#['response_payload_2']" doc:name="Assert Payload"/>
    </munit:test>
    <munit:test name="SubFlowTest_Unit_Test-1" description="Test">
        <munit:set payload="#['payload_1']" doc:name="Set Message"/>
        <flow-ref name="SubFlow" doc:name="Flow-ref to SubFlow"/>
        <mock:verify-call messageProcessor=".*:.*" doc:name="Verify Call">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#[matchContains('SubFlow')]"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
    <munit:test name="SubFlowTest_Unit_Test-2" description="Test">
        <munit:set payload="#['payload_2']" doc:name="Set Message"/>
        <flow-ref name="SubFlow" doc:name="Flow-ref to SubFlow"/>
        <mock:verify-call messageProcessor=".*:.*" doc:name="Verify Call">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#[matchContains('SubFlow')]"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
</mule>
